generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// Removed duplicate datasource definition to resolve the error.

model visaApplication {
  id                 String            @id @default(cuid())
  fullName           String
  email              String
  countryOfOrigin    String
  destinationCountry String
  visaType           String
  travelDate         DateTime?
  passportImage      String
  residencePermit    String
  personalPhoto      String
  additionalDocs     String?
  trackingCode       String @unique
  createdAt          DateTime          @default(now()) @map("created_at")
  updatedAt          DateTime          @updatedAt
  status             ApplicationStatus @default(AWAITING_PAYMENT)

  @@map("applications")
}

model AppUser {
  id            String        @id @default(cuid())
  name          String?
  email         String        @unique
  emailVerified DateTime?
  image         String?
  role          Role          @default(USER)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@unique([email, role])
  @@index([email])
  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  type              String
  refreshToken      String? @map("refresh_token")
  accessToken       String? @map("access_token")
  expiresAt         Int?    @map("expires_at")
  tokenType         String? @map("token_type")
  scope             String?
  idToken           String? @map("id_token")
  sessionState      String? @map("session_state")
  user              AppUser @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         AppUser  @relation(fields: [userId], references: [id])

  @@map("sessions")
}

enum Role {
  USER
  ADMIN
}

enum ApplicationStatus {
  AWAITING_PAYMENT
  PENDING
  APPROVED
  REJECTED
}
